All changes made to the library that might affect applications
during upgrade will be listed here.


1.5 -> 1.6
===========================
+ API methods now allow for kargs that are not listed in the 
  allowed_params list. This way Tweepy can support future parameters
  twitter adds without having the patch the library.

1.4 -> 1.5
===========================
+ Models
    - Added some new helper methods to List model
    - User model
        - Added lists_memberships, lists_subscriptions, and lists helpers
        - Added followers_ids helper
    - Added ModelFactory to replace 'models' dict in tweepy.models.
        Extend this factory to plugin customized models then pass into API().
+ API
    - lists(), lists_memberships(), and lists_subscriptions() now
        take an "user" parameter for specifying which user to query.
+ OAuthHandler
    - You may now pass in an optional 'secure' boolean to the
        constructor which will use https for OAuth requests.
        Ex: auth = OAuthHandler(token,secret,secure=True)
    - Fallback to using 'twitter.com' instead of 'api.twitter.com'
        for OAuth until issue #8 is resolved.

1.3 -> 1.4
===========================
+ Added people search API method. API.search_users()
+ Streaming API
    - Moved parameters into POST body to prevent "head too big" errors.
    - Stream can be run either asynchronously (threaded) or synchronously (blocks main thread).
      By default Stream will run in sync. mode. To change this pass into the stream
      method 'async=True'. Example:
          s = Stream('test', 'password', MyListener())
          s.sample(async=True)  # threaded mode
          s.filter(track=['pizza']) # synch./blocking mode
    - Listener now has a "on_data" method which can be overridden to manually handle the
        raw stream data.
+ tweepyshell
    - allow using getpass for more secure password collection
      new usage: tweepyshell <username> [password] <-- optional now
    - enable debug mode with '-d' flag
+ API
	- retweet() method now works correctly
    - Added local trends method: trends_available() and trends_location()
	- send_direct_message() now accepts either a user/screen_name/user_id for recipient of DM
    - update_status() added 'source' parameter for Identi.ca
    - create_list() and update_list() added 'description' parameter
+ tweepy.debug() enables httplib debug mode
+ New Sphinx documentation (Thanks Kumar!) in doc/
+ User model
    - Fix timeline() to return correct timeline
    - Remove mentions() method

1.2 -> 1.3
=====================
+ Lists API methods added
+ API.verify_credentials() now returns an User object if credentials
    are valid. Otherwise false will be returned.
+ API.new() removed
+ Removed model validation. Prone to breakage due to API changes.
+ Moved documentation out of api.py and into wiki.
+ Removed 'email' parameter from API.update_profile. No longer supported.
+ API.auth_handler -> API.auth
+ Moved memcache implementation to tweepy-more repository.
+ Tweepy now uses the versioned API and the new api.twitter.com subdomain
+ Updated retweet parsing for new payload format

1.1 -> 1.2
=====================
+ API
    + Added automatic request re-try feature
        Example: API.friends(retry_count=5, retry_delay=10)
                Retry up to 5 times with a delay of 10 seconds between each attempt.
        See tutorial/t4.py for more an example.
    + Added cursor parameter to API.friends and API.followers methods.
      Note: page parameter is being deprecated by twitter on 10/26
    + Update parsing to handle cursor responses.
        When using 'cursor' parameter, the API method will return
        a tuple with this format: (data, next_cursor, prev_cursor)
        Calls not using the 'cursor' parameter are not changed in the way they return.
    + API.friends_ids and API.followers_ids now return a list of integers.
      Parser updated to handle cursor responses. See above.
    + Fix Status.source_url parsing
    + Fix search result 'source' parsing to properly unescape html and extract source
    + Added report_spam method

+ Cursor
    Added the Cursor object to help with pagination within the API.
    Please see the pagination tutorial for more details (tutorial/t6).
    This is the recommended way for using the 'page' and 'cursor' parameters.

+ Models
    + Status: added retweet, favorite and retweets methods
      (NOTE: retweet API not live yet on twitter)

+ Python 2.4 support

+ Update OAuth bundled library.

- Logging removed. Having our own mini-logging system just feels like overkill.
  Turns out it was not really needed that much. Simply just exposing the last
  HTTPResponse object should be good enough for most debugging.

1.0.1 -> 1.1
=======================
+ Fixes
    + Google App Engine fixes (thanks Thomas Bohmbach, Jr)
+ API
    + Added Retweet API methods
    + Added Retweet Streaming method
    + New model: Retweet
    + Updated statuses parser to handle retweet_details
    + Added new parameters for statuses/update; lat & long
    + friends_ids() & followers_ids() parameter changed page -> cursor
    + search() added "locale" parameter
    + expose last httplib.HTTPResponse object received as API.last_response
+ OAuthHandler
    + Added set_request_token() method
    + Added support for "sign in with twitter".
      get_authorization_url() now takes a boolean that when
      true uses the "sign in with twitter" flow.
      See http://apiwiki.twitter.com/Sign-in-with-Twitter
+ Logging
    + Added TweepyLogger interface which allows applications
      to collect log messages from Tweepy for debugging purposes.
    + Dummy, console, and file loggers available
+ Examples
    + Appengine demo (oauth)
+ Documentation of each method in api.py

1.0 -> 1.0.1
============
+ Status.user --> Status.author
+ User:
    + follow()
    + unfollow()
+ API:
    + __init__() signature change; no longer accepts 'username' parameter
      which is now autodetected.
    + added new() method. shortcut for setting up new API instances
      example: API.new(auth='basic', username='testuser', password='testpass')
    + update_profile_image() and update_profile_background_image() method added.
    + Added search API methods: 
        trends, trends_current, trends_daily, and trends_weekly
+ Streaming:
    + Update to new streaming API methods
    + New StreamListener class replacing callback function
+ Fixes
    + User.following is now set to False instead of None
      when user is not followed.
    + python 2.5 import syntax error fixed
    + python 2.5 timeout support for streaming API
    + win32 failed import of fcntl in cache.py
+ Changed indents from 2 to 4 spaces

